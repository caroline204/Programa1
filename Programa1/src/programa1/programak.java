/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package programa1;

import java.awt.Graphics;
import java.awt.Color;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
/**
 *
 * @author carol
 */
public class programak extends javax.swing.JFrame {
    
    protected ArrayList<Integer> X = new ArrayList<Integer>();
    protected ArrayList<Integer> Y = new ArrayList<Integer>();
    ArrayList<Integer> color = new ArrayList<Integer>();
    int centro = 0;
    int centroY = 0;
    int centroX = 0;
    
    
    MouseListener m = new MouseListener(){

        @Override
        public void mouseClicked(MouseEvent e) {
           X.add(e.getX()+centro);
           Y.add(e.getY()+33);
           color.add(Vecinos(Integer.parseInt(jComboBox1.getSelectedItem().toString()),e.getX()+centro,e.getY()+33));
           repaint();
        }

        @Override
        public void mousePressed(MouseEvent e) {
            
        }

        @Override
        public void mouseReleased(MouseEvent e) {
            
        }

        @Override
        public void mouseEntered(MouseEvent e) {
           
        }

        @Override
        public void mouseExited(MouseEvent e) {
            
        }
        
    };
            

    /**
     * Creates new form programak
     */
    public programak() {
        initComponents();
        centro = this.getWidth()-jPanel1.getWidth()-10;
        centroY = this.getHeight()/2;
        centroX = (this.getWidth()+centro)/2;
        jPanel1.addMouseListener(m);
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("jLabel1");

        jTextField1.setText("jTextField1");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5" }));

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 624, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jButton2.setText("Reiniciar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(39, 39, 39)
                .addComponent(jButton1)
                .addGap(67, 67, 67)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        int N = Integer.parseInt(jTextField1.getText());
        for(int i=0; i<N; i++){
           X.add((int)(Math.random()*centroX+centro));
           Y.add((int)(Math.random()*this.getHeight()+4));
           color.add((int)(Math.random()*3+1));
          
           
        }
        repaint();
        
    }
    
    
    public void paint(Graphics g){
    super.paint(g);
    
    
    g.setColor(Color.BLACK);
    g.drawLine(centro,centroY, this.getWidth(),centroY);
    g.drawLine(centroX,0,centroX,this.getWidth());
    
    for (int i =0; i < this.getHeight(); i+=10) {
          g.drawLine(centroX-10,i, centroX+10,i);
    }
    for (int i =centro; i < this.getWidth(); i+=10) {
          g.drawLine(i,centroY-10,i,centroY+10);
    }
    g.setColor(Color.red);
    if(!X.isEmpty()){
    }
        for(int i=0; i<X.size(); i++){
        g.drawLine(X.get(i)-5,Y.get(i),X.get(i)+5,Y.get(i));
        g.drawLine(X.get(i),Y.get(i)-5,X.get(i),Y.get(i)+5);
    
        }
         g.setColor(Color.GRAY);
    if(!X.isEmpty()){
        int punto;
       
        for(int i=1; i<X.size(); i++){
            punto=color.get(i); 
            switch(punto){
            case 1:
            g.setColor(Color.BLACK);
            g.drawLine(X.get(i)-5,Y.get(i),X.get(i)+5,Y.get(i));
            g.drawLine(X.get(i),Y.get(i)-5,X.get(i),Y.get(i)+5);
                    break;
            case 2:
            g.setColor(Color.RED);
            g.drawLine(X.get(i)-5,Y.get(i),X.get(i)+5,Y.get(i));
            g.drawLine(X.get(i),Y.get(i)-5,X.get(i),Y.get(i)+5);
                break;
            case 3:
            g.setColor(Color.ORANGE);
            g.drawLine(X.get(i)-5,Y.get(i),X.get(i)+5,Y.get(i));
            g.drawLine(X.get(i),Y.get(i)-5,X.get(i),Y.get(i)+5);
                break; 
            }
        }
 }
    }//GEN-LAST:event_jButton1ActionPerformed
 
    public int Vecinos(int m, int p, int t){
     Double [] n = new Double[m];
     Integer [] ab = new Integer [m];
     double linea =0;
     double h=0;
     int br=0;
     switch (m){
         case 1:
             n[0]=Math.sqrt((Math.pow((X.get(0)-p),2))+(Math.pow((Y.get(0)-t),2)));
             ab[0]=color.get(0);
             for(int i=m;i<X.size()-1;i++){
                 linea=Math.sqrt((Math.pow((X.get(i)-p),2))+(Math.pow((Y.get(i)-t),2)));
                 if(n[0]>=linea){
                    n[0]=linea;
                    ab[0]=color.get(i);
                  
                     }
                 
             }
         break;
             
             case 2:
             n[0]=Math.sqrt((Math.pow((X.get(0)-p),2))+(Math.pow((Y.get(0)-t),2)));
             n[1]=Math.sqrt((Math.pow((X.get(1)-p),2))+(Math.pow((Y.get(1)-t),2)));
             ab[0]=color.get(0);
             for(int i=m;i<X.size()-1;i++){
                 linea=Math.sqrt((Math.pow((X.get(i)-p),2))+(Math.pow((Y.get(i)-t),2)));
                 if(n[0]>=linea){
                    n[0]=linea;
                    ab[0]=color.get(i);
    
                 }
                 for(int j=0;j<m-1;j++){
                      for(int k=j+1; k<m;k++){
                          if(n[j]<n[k]){
                              h=n[j];
                              n[j]=n[k];
                              n[k]=h;
                              br=ab[j];
                              ab[j]=ab[k];
                              ab[k]=br;
                          }
                      }
                 }
             }
             
                 break;
                 
             case 3:
             n[0]=Math.sqrt((Math.pow((X.get(0)-p),2))+(Math.pow((Y.get(0)-t),2)));
             n[1]=Math.sqrt((Math.pow((X.get(1)-p),2))+(Math.pow((Y.get(1)-t),2)));
             n[2]=Math.sqrt((Math.pow((X.get(2)-p),2))+(Math.pow((Y.get(2)-t),2)));
             ab[0]=color.get(0);
             ab[1]=color.get(1);
             ab[2]=color.get(2);
             for(int i=m;i<X.size()-1;i++){
                 linea=Math.sqrt((Math.pow((X.get(i)-p),2))+(Math.pow((Y.get(i)-t),2)));
                 if(n[0]>=linea){
                    n[0]=linea;
                    ab[0]=color.get(i);
                 }
                     for(int j=0;j<m-1;j++){
                      for(int k=j+1; k<m;k++){
                          if(n[j]<n[k]){
                              h=n[j];
                              n[j]=n[k];
                              n[k]=h;
                              br=ab[j];
                              ab[j]=ab[k];
                              ab[k]=br;
                          }
                      }
                 }
             }
                 break; 
                 
             case 4:
                 n[0]=Math.sqrt((Math.pow((X.get(0)-p),2))+(Math.pow((Y.get(0)-t),2)));
                 n[1]=Math.sqrt((Math.pow((X.get(1)-p),2))+(Math.pow((Y.get(1)-t),2)));
                 n[2]=Math.sqrt((Math.pow((X.get(2)-p),2))+(Math.pow((Y.get(2)-t),2)));
                 n[3]=Math.sqrt((Math.pow((X.get(3)-p),2))+(Math.pow((Y.get(3)-t),2)));
             ab[0]=color.get(0);
             ab[1]=color.get(1);
             ab[2]=color.get(2);
             ab[3]=color.get(3);
             for(int i=m;i<X.size()-1;i++){
                 linea=Math.sqrt((Math.pow((X.get(i)-p),2))+(Math.pow((Y.get(i)-t),2)));
                 if(n[0]>=linea){
                    n[0]=linea;
                    ab[0]=color.get(i); 
                 }
                     for(int j=0;j <m-1;j++){
                      for(int k=j+1; k<m;k++){
                          if(n[j]<n[k]){
                              h=n[j];
                              n[j]=n[k];
                              n[k]=h;
                              br=ab[j];
                              ab[j]=ab[k];
                              ab[k]=br;
                          }
                      }
                 }
             }
                 break;
             case 5:
             n[0]=Math.sqrt((Math.pow((X.get(0)-p),2))+(Math.pow((Y.get(0)-t),2)));
             n[1]=Math.sqrt((Math.pow((X.get(1)-p),2))+(Math.pow((Y.get(1)-t),2)));
             n[2]=Math.sqrt((Math.pow((X.get(2)-p),2))+(Math.pow((Y.get(2)-t),2)));
             n[3]=Math.sqrt((Math.pow((X.get(3)-p),2))+(Math.pow((Y.get(3)-t),2)));
             n[4]=Math.sqrt((Math.pow((X.get(4)-p),2))+(Math.pow((Y.get(4)-t),2)));
             ab[0]=color.get(0);
             ab[1]=color.get(1);
             ab[2]=color.get(2);
             ab[3]=color.get(3);
             ab[4]=color.get(4);
             for(int i=m;i<X.size()-1;i++){
                 linea=Math.sqrt((Math.pow((X.get(i)-p),2))+(Math.pow((Y.get(i)-t),2)));
                 if(n[0]>=linea){
                    n[0]=linea;
                    ab[0]=color.get(i);
                 }
                     for(int j=0;j<m-1;j++){
                      for(int k=j+1; k<m;k++){
                          if(n[j]<n[k]){
                              h=n[j];
                              n[j]=n[k];
                              n[k]=h;
                              br=ab[j];
                              ab[j]=ab[k];
                              ab[k]=br;
                          }
                      }
                 }
             }
                 break;
         
     }
     
     int n1 = 0, n2 = 0, n3 = 0;

        for (int i = 0; i < m; i++) {
            switch (ab[i]) {
                case 1:
                n1++;
                    break;
                case 2:
                n2++;
                    break;
                default:
                n3++;
                    break;
    }
    }
        if (n1 > n2 && n1 > n2) {
                 return 1;
            } else if (n2 > n1 && n2 > n3) {
            return 2;
            } else {
            return 3;
        }
     
    }



    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        X.clear();
        Y.clear();
        repaint();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(programak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(programak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(programak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(programak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new programak().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
